-- Define the list of allowed user IDs
local allowedIDs = {2425974901, 1809192714, 16875091, 125449922, 3340760443, 3602779244, 3297448353, 2609239203, 4292362053}

-- Get the ID of the local player
local userID = game.Players.LocalPlayer.UserId

-- Check if the ID is in the list of allowed IDs
local isAllowed = false
for _, id in ipairs(allowedIDs) do
    if userID == id then
        isAllowed = true
        break
    end
end

-- Debugging: print the value of isAllowed to the console
print("isAllowed:", isAllowed)

-- Execute the script depending on whether the ID is allowed or not
if isAllowed then

loadstring(game:HttpGet('https://raw.githubusercontent.com/amagineLost/Swnt/main/Protected.lua%20(11).txt'))()

-- Load the OrionLib library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Create a new window with the specified settings
local Window = OrionLib:MakeWindow({
  Name = "Lost Animal Gui",
  HidePremium = false,
  SaveConfig = true,
  ConfigFolder = "MyConfigFolder",
  IntroEnabled = false,
  Icon = "https://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&userid=1",
})

-- Create a new tab in the window
local myTab = Window:MakeTab({
  Name = "Information",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Add a paragraph to the new tab
myTab:AddParagraph("For Mobile !", "This opens a keybaord to hide and unhide the gui")

-- Add a button to the new tab
myTab:AddButton({
  Name = "keybaord",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()
  end,
})

-- Add a paragraph to the new tab
myTab:AddParagraph("Join Any Team", "press team name from drop down to join")

-- Add a dropdown menu to the tab
local teamDropdown = myTab:AddDropdown({
  Name = "Team",
  Default = "Select a team",
  Options = {},
  Callback = function(value)
    -- Join the selected team
    for _, team in pairs(game.Workspace.Teams:GetChildren()) do
      if team.Name == value then
        game:GetService("ReplicatedStorage").acceptedEvent:FireServer(value)
        break
      end
    end
  end,
})

-- Define a function to update the dropdown menu with the current teams in the game
local function updateTeamsDropdown()
  local teams = {}
  for _, team in pairs(game.Workspace.Teams:GetChildren()) do
    table.insert(teams, team.Name)
  end
  teamDropdown:Refresh(teams, true)
end

-- Call the updateTeamsDropdown() function once to initially populate the dropdown menu
updateTeamsDropdown()

-- Add a paragraph to the new tab
myTab:AddParagraph("⚠️ Important ⚠️", "The chat spy in the other tab does get private messages just doesn't change the color")

-- Create a new tab in the window
local autofarmTab = Window:MakeTab({
  Name = "autofarm",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Add buttons to the new tab
autofarmTab:AddButton({
  Name = "Oni Hub",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/exposed/main/Untitled.112.txt'))()
  end,
})

autofarmTab:AddButton({
  Name = "Crow Hub",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrowzScripts/AnimalSim/main/CrowOnTop"))()
  end,
})

autofarmTab:AddButton({
  Name = "Rip Hub",
  Callback = function()
    _G.RedGUI = true
    _G.Theme = "Dark" -- Must disable or remove _G.RedGUI to use
    --Themes: Light, Dark, Mocha, Aqua and Jester

    loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/AnimalSimulator.lua"))()
  end,
})

-- Add a button to the new tab
autofarmTab:AddButton({
  Name = "Level Tracker",
  Callback = function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/amagineLost/level-tracker-/main/Protected.lua%20(12).txt')))()
  end,
})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create a new tab in the window
local killTab = Window:MakeTab({
  Name = "kill",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Create the dropdown
local playerList = {}
for _, player in ipairs(game.Players:GetPlayers()) do
    table.insert(playerList, player.Name)
end

local selectedPlayerName = "" -- set a default value

killTab:AddDropdown({
    Name = "PlayerDropdown",
    Default = "",
    Options = playerList,
    Callback = function(selectedPlayer)
        selectedPlayerName = selectedPlayer
        print("Selected player:", selectedPlayerName)
    end    
})

killTab:AddButton({
    Name = "Kill player",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        local humanoid = character:WaitForChild("Humanoid")

        local targetName = selectedPlayerName
        
        local targetPlayer = game.Players:FindFirstChild(targetName)
        if targetPlayer then
            character:SetPrimaryPartCFrame(targetPlayer.Character.PrimaryPart.CFrame)

            -- Wait 1 second
            wait(1)

            -- Use targetName as the first argument in args table
            local args = {
                [1] = targetName,
                [2] = "carry"
            }
            
            local remote = game:GetService("ReplicatedStorage"):WaitForChild("RideEvents"):WaitForChild("acceptEvent")
            local success, result = pcall(remote.FireServer, remote, unpack(args))
            if success then
                -- Set character health to 0
                humanoid.Health = 0
            else
                print("Error occurred while calling remote function: " .. tostring(result))
            end
        else
            print("Could not find player with username: " .. targetName)
        end
    end
})

local isRunning = false

killTab:AddToggle({
    Name = "loop kill player",
    Default = false,
    Callback = function(Value)
        isRunning = Value
        if isRunning then
            local targetPlayer = game.Players:FindFirstChild(selectedPlayerName)
            if not targetPlayer then
                print("Could not find player with username: " .. selectedPlayerName)
                return
            end

            targetPlayer.CharacterAdded:Connect(function(character)
                targetCharacter = character
            end)

            spawn(function()
                local targetCharacter = targetPlayer.Character
                while not targetCharacter do
                    wait()
                    targetCharacter = targetPlayer.Character
                end

                while isRunning do
                    local player = game.Players.LocalPlayer
                    local character = player.Character or player.CharacterAdded:Wait()
                    local humanoid = character:WaitForChild("Humanoid")
                    if humanoid.Health > 0 then
                        if targetCharacter and targetCharacter.Parent then
                            character:SetPrimaryPartCFrame(targetCharacter.PrimaryPart.CFrame)
                            wait(1)
                            local args = {
                                [1] = selectedPlayerName,
                                [2] = "carry"
                            }
                            local remote = game:GetService("ReplicatedStorage"):WaitForChild("RideEvents"):WaitForChild("acceptEvent")
                            local success, result = pcall(remote.FireServer, remote, unpack(args))
                            if success then
                                humanoid.Health = 0
                            else
                                print("Error occurred while calling remote function: " .. tostring(result))
                            end
                        else
                            print("Target player is not spawned, waiting...")
                            repeat
                                wait()
                                targetCharacter = targetPlayer.Character
                            until targetCharacter and targetCharacter.Parent
                            print("Target player has respawned!")
                        end
                    else
                        print("Player is dead, waiting for respawn...")
                        humanoid.Died:Wait()
                        print("Player has respawned!")
                    end
                    wait() -- you can adjust the wait time to control the loop frequency
                end
            end)
        end
    end    
})

-- Add a paragraph to the new tab
killTab:AddParagraph("kill defense", "after pressed , press the right hand or upper arm in the gui")

killTab:AddButton({
  Name = "insta kill defense",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/amagineLost/anti-kill/main/Protected.lua%20(1).txt'))()
  end,
})

-- Create a new tab in the window
local otherTab = Window:MakeTab({
  Name = "Other",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

otherTab:AddButton({
  Name = "Tall/Big",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/tall-script/main/Code'))()
  end,
})

otherTab:AddButton({
  Name = "Hatfling",
  Callback = function()
    loadstring(game:HttpGet('https://gist.githubusercontent.com/1BlueCat/544f7efbe88235666b5b7add65b7344d/raw/f20804bb85542dcc3bc938982e1f05b7ff05cded/FE%2520Hat'))()
  end,
})

otherTab:AddButton({
  Name = "Search Gui",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/search-/main/Code'))()
  end,
})

otherTab:AddButton({
  Name = "OpHatfling",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/fling/main/Code'))()
  end,
})

otherTab:AddButton({
  Name = "Chat Bypasser",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/RobloxUsers/main/Players.txt'))()
  end,
})

otherTab:AddButton({
  Name = "chatspy",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/amagineLost/chatspy/main/Chat%20log.txt'))()
  end,
})

-- Create a new tab in the window
local adminTab = Window:MakeTab({
  Name = "Admin / Hubs",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

adminTab:AddButton({
  Name = "Infinite yeild",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  end,
})

adminTab:AddButton({
  Name = "Galatek Hub",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/toldblock/GelatekHub/main/Main.lua'))()
  end,
})

-- Create a new tab in the window
local roleTab = Window:MakeTab({
  Name = "roleplay name",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

roleTab:AddTextbox({
	Name = "Name Imput",
	Default = "type name here",
	TextDisappear = false,
	Callback = function(text)
		roleplayName = text
	end	  
})

roleTab:AddButton({
  Name = "Apply Name",
  Callback = function()

      -- Check if the roleplay name is longer than 100 characters
      if string.len(roleplayName) > 100 then
         roleplayName = string.sub(roleplayName, 1, 100) -- Truncate the name to 100 characters
      end

      -- Call the server event with the roleplay name argument
      local args = {
         [1] = roleplayName,
         [2] = "player"
      }

      game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("nameEvent"):FireServer(unpack(args))
   end,
})

-- Create a new tab in the window
local creditTab = Window:MakeTab({
  Name = "Credits / help",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Add a paragraph to the new tab
creditTab:AddParagraph("Script developer", "Lost")

-- Add a paragraph to the new tab
creditTab:AddParagraph("Roblox User", "NF_lostbunny")

-- Add a paragraph to the new tab
creditTab:AddParagraph("For Help", "Ask moderation in discord server or message Crescent rose#0727")

-- Set up a loop to update the dropdown menu every second
while true do
  wait(1)
  updateTeamsDropdown()
end

else
 game:GetService("Players").LocalPlayer:Kick("Do not access to NF Scripts")
end
